genrule(
  name = "enums_c",
  labels = ["codegen"],
  srcs = {
    "enum_fbs": "enum.fbs",
  },
  outs = {
    "c": ["c"],
  },
  cmd = [
    "mkdir -p $OUTS_C",
    "$TOOLS_FLATCC -w -c -r -o$OUTS_C $SRCS_ENUM_FBS",
  ],
  deps = [
    "//tools/flatcc:build",
  ],
  tools = {
    "flatcc": "//tools/flatcc:build|flatcc",
  },
)

genrule(
  name = "enums_ts",
  srcs = {
    "enum_fbs": "enum.fbs",
  },
  outs = {
    "ts": ["ts"],
  },
  cmd = [
    "mkdir -p $OUTS_TS",
    "$TOOLS_FLATC --ts --natural-utf8 --gen-all --warnings-as-errors -o $OUTS_TS $SRCS_ENUM_FBS",
    # "$TOOLS_NODE node_modules/@swc/cli/bin/swc.js . --out-dir $OUT --config-file ../../.swcrc",
  ],
  deps = [
    "//tools/flatbuffers:build",
  ],
  tools = {
    "flatc": "//tools/flatbuffers:build|flatc",
  },
)

genrule(
  name = "enums_js",
  labels = ["codegen"],
  srcs = {
    "enum_fbs": "enum.fbs",
    "package_json": "js.package.json",
    "swcrc": ".swcrc",
  },
  outs = {
    "js": ["js"],
  },
  cmd = [
    "mkdir -p $OUTS_JS",
    "cp $SRCS_PACKAGE_JSON tools/flatcc/specs/enum/ts/package.json",
    "cp $SRCS_SWCRC tools/flatcc/specs/enum/ts",
    "pnpm install",
    "cd tools/flatcc/specs/enum/ts",
    "$TOOLS_NODE node_modules/@swc/cli/bin/swc.js . --out-dir ../../../../../$OUTS_JS --config-file .swcrc",
  ],
  deps = [
    "//:pnpm_common_files",
    ":enums_ts",
    "//sources/libs/flatbuffers.js:build",
  ],
  tools = {
    "flatc": "//tools/flatbuffers:build|flatc",
    "node": "node",
  },
)

filegroup(
  name = "zig_files",
  srcs = [
    "lib/build.zig.zon",
    "lib/build.zig",
    "lib/src/root.zig",
  ],
)

gentest(
  name = "enums_zig",
  srcs = [
    ":enums_c|outs",
    ":enums_js|outs",
    "//tools/flatcc:build|libflatcc_d_a",
    "//tools/flatcc:build|libflatcc_a",
    "//tools/flatcc:build|libflatccrt_d_a",
    "//tools/flatcc:build|libflatccrt_a",
    ":zig_files",
  ],
  deps = [
    ":enums_c",
    ":enums_js",
    "//tools/flatcc:build",
  ],
  outs = [
    "out",
  ],
  test_cmd = [
    "export LIB_NAME=enums",
    "cd tools/flatcc/specs/lib",
    "echo $(pwd)",
    # "mkdir -p $OUT",
    # "zig build-lib -dynamic src/lib.zig --name $LIB_NAME -O ReleaseSafe",
    # "mv lib$LIB_NAME.* $OUT",
    "exit 1",
  ],
)