package(
  default_visibility = ["PUBLIC"],
)

github_repo(
  name = "flatbuffers_src",
  repo = "google/flatbuffers",
  revision = f"v{CONFIG.FLATBUFFERS_VERSION}",
)

genrule(
  name = "flatcompiler",
  exit_on_error = True,
  binary = True,
  outs = {
    "flatc": ["flatc"],
  },
  cmd = [
    "cd tools/flatbuffers/flatbuffers_src",
    "cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DFLATBUFFERS_BUILD_TESTS=OFF -DFLATBUFFERS_INSTALL=OFF -DFLATBUFFERS_BUILD_FLATLIB=OFF",
    "make -j",
    "cp flatc $OUT",
  ],
  deps = [
    ":flatbuffers_src",
  ],
)

# genrule(
#   name = "flatbuffers.js",
#   exit_on_error = True,
#   labels = ["codegen"],
#   srcs = [
#     ":flatbuffers_src|tools/flatbuffers/flatbuffers_src/ts",
#     ".files/js/.swcrc",
#     ".files/js/build.package.json",
#     ".files/js/package.json",
#   ],
#   outs = [
#     "out",
#   ],
#   cmd = [
#     "mkdir -p out.ts",
#     "mkdir -p out",
#     "cp tools/flatbuffers/.files/js/build.package.json out.ts/package.json",
#     "cp tools/flatbuffers/.files/js/.swcrc out.ts/.swcrc",
#     "cp tools/flatbuffers/.files/js/package.json $OUT",
#     "cp -r tools/flatbuffers/flatbuffers_src/ts/ out.ts/",
#     """echo "export * from './flatbuffers.js';" > $OUT/index.js""",
#     "pnpm install",
#     "cd out.ts",
#     "node node_modules/@swc/cli/bin/swc.js . --out-dir $OUT --sync --config-file .swcrc",
#   ],
#   deps = [
#     ":flatcompiler",
#     ":flatbuffers_src",
#     "//:pnpm_common_files",
#   ],
# )
