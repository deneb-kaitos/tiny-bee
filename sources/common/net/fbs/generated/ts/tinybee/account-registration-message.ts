// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class AccountRegistrationMessage {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AccountRegistrationMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAccountRegistrationMessage(bb:flatbuffers.ByteBuffer, obj?:AccountRegistrationMessage):AccountRegistrationMessage {
  return (obj || new AccountRegistrationMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAccountRegistrationMessage(bb:flatbuffers.ByteBuffer, obj?:AccountRegistrationMessage):AccountRegistrationMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AccountRegistrationMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

login():string|null
login(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
login(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

password():string|null
password(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
password(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pin():string|null
pin(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pin(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startAccountRegistrationMessage(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addLogin(builder:flatbuffers.Builder, loginOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, loginOffset, 0);
}

static addPassword(builder:flatbuffers.Builder, passwordOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, passwordOffset, 0);
}

static addPin(builder:flatbuffers.Builder, pinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, pinOffset, 0);
}

static endAccountRegistrationMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAccountRegistrationMessage(builder:flatbuffers.Builder, loginOffset:flatbuffers.Offset, passwordOffset:flatbuffers.Offset, pinOffset:flatbuffers.Offset):flatbuffers.Offset {
  AccountRegistrationMessage.startAccountRegistrationMessage(builder);
  AccountRegistrationMessage.addLogin(builder, loginOffset);
  AccountRegistrationMessage.addPassword(builder, passwordOffset);
  AccountRegistrationMessage.addPin(builder, pinOffset);
  return AccountRegistrationMessage.endAccountRegistrationMessage(builder);
}
}
