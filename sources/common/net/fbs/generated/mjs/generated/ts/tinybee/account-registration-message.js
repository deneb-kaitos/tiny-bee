// automatically generated by the FlatBuffers compiler, do not modify
  import * as flatbuffers from "flatbuffers";
export class AccountRegistrationMessage {
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsAccountRegistrationMessage(bb, obj) {
        return (obj || new AccountRegistrationMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsAccountRegistrationMessage(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new AccountRegistrationMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    login(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    password(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    pin(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    static startAccountRegistrationMessage(builder) {
        builder.startObject(3);
    }
    static addLogin(builder, loginOffset) {
        builder.addFieldOffset(0, loginOffset, 0);
    }
    static addPassword(builder, passwordOffset) {
        builder.addFieldOffset(1, passwordOffset, 0);
    }
    static addPin(builder, pinOffset) {
        builder.addFieldOffset(2, pinOffset, 0);
    }
    static endAccountRegistrationMessage(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createAccountRegistrationMessage(builder, loginOffset, passwordOffset, pinOffset) {
        AccountRegistrationMessage.startAccountRegistrationMessage(builder);
        AccountRegistrationMessage.addLogin(builder, loginOffset);
        AccountRegistrationMessage.addPassword(builder, passwordOffset);
        AccountRegistrationMessage.addPin(builder, pinOffset);
        return AccountRegistrationMessage.endAccountRegistrationMessage(builder);
    }
    constructor(){
        this.bb = null;
        this.bb_pos = 0;
    }
}
